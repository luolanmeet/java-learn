package pers.dao.databasedo;

import java.util.ArrayList;
import java.util.Date;
import java.util.List;

/**
 * This class was generated by Ali-Generator
 * @author chenken
 */
public class PdpTbTradeParam {
    /**
     *
     * @mbg.generated
     */
    protected String orderByClause;

    /**
     *
     * @mbg.generated
     */
    @Deprecated
    protected boolean distinct;

    /**
     *
     * @mbg.generated
     */
    protected boolean page;

    /**
     *
     * @mbg.generated
     */
    protected int pageIndex;

    /**
     *
     * @mbg.generated
     */
    protected int pageSize;

    /**
     *
     * @mbg.generated
     */
    protected int pageStart;

    /**
     *
     * @mbg.generated
     */
    protected String distinctSql;

    /**
     *
     * @mbg.generated
     */
    protected List<Criteria> oredCriteria;

    /**
     *
     * @mbg.generated
     */
    public PdpTbTradeParam() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * @param orderCondition
     * @param sortType
     * @return
     *
     * @mbg.generated
     */
    public PdpTbTradeParam appendOrderByClause(OrderCondition orderCondition, SortType sortType) {
        if (null != orderByClause) {
            orderByClause = orderByClause + ", " + orderCondition.getColumnName() + " " + sortType.getValue();
        } else {
            orderByClause = orderCondition.getColumnName() + " " + sortType.getValue();
        }
        return this;
    }

    /**
     * @return
     *
     * @mbg.generated
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * @param distinct
     *
     * @mbg.generated
     */
    @Deprecated
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * @return
     *
     * @mbg.generated
     */
    @Deprecated
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * @param page
     * @return
     *
     * @mbg.generated
     */
    public PdpTbTradeParam setPage(boolean page) {
        this.page = page;
        return this;
    }

    /**
     * @return
     *
     * @mbg.generated
     */
    public boolean isPage() {
        return page;
    }

    /**
     * @return
     *
     * @mbg.generated
     */
    public int getPageIndex() {
        return pageIndex;
    }

    /**
     * @param pageSize
     * @return
     *
     * @mbg.generated
     */
    public PdpTbTradeParam setPageSize(int pageSize) {
        this.pageSize = pageSize < 1 ? 10 : pageSize;
        this.pageIndex = pageStart < 1 ? 0 : (pageStart - 1) * this.pageSize;
        return this;
    }

    /**
     * @return
     *
     * @mbg.generated
     */
    public int getPageSize() {
        return pageSize;
    }

    /**
     * @param pageStart
     * @return
     *
     * @mbg.generated
     */
    public PdpTbTradeParam setPageStart(int pageStart) {
        this.pageStart = pageStart < 1 ? 1 : pageStart;
        this.pageIndex = (this.pageStart - 1) * this.pageSize;
        return this;
    }

    /**
     * @return
     *
     * @mbg.generated
     */
    public int getPageStart() {
        return pageStart;
    }

    /**
     * @param pageStart
     * @param pageSize
     *
     * @mbg.generated
     */
    public void setPagination(int pageStart, int pageSize) {
        this.page = true;
        this.pageSize = pageSize < 1 ? 10 : pageSize;
        this.pageIndex = pageStart < 1 ? 0 : (pageStart - 1) * this.pageSize;
    }

    /**
     * @param condition
     * @return
     *
     * @mbg.generated
     */
    public PdpTbTradeParam appendDistinct(OrderCondition condition) {
        if (null != distinctSql){
            distinctSql = distinctSql + ", " + condition.getColumnName();
        } else {
            distinctSql = condition.getColumnName();
        }
        return this;
    }

    /**
     * @return
     *
     * @mbg.generated
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * @param criteria
     *
     * @mbg.generated
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * @return
     *
     * @mbg.generated
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * @return
     *
     * @mbg.generated
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * @return
     *
     * @mbg.generated
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     *
     * @mbg.generated
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     *
     * @mbg.generated
     */
    protected abstract static class AbstractGeneratedCriteria {
        protected List<Criterion> criteria;

        protected AbstractGeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andIdIsNull() {
            addCriterion("id is null");
            return (Criteria) this;
        }

        public Criteria andIdIsNotNull() {
            addCriterion("id is not null");
            return (Criteria) this;
        }

        public Criteria andIdEqualTo(Long value) {
            addCriterion("id =", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotEqualTo(Long value) {
            addCriterion("id <>", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThan(Long value) {
            addCriterion("id >", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThanOrEqualTo(Long value) {
            addCriterion("id >=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThan(Long value) {
            addCriterion("id <", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThanOrEqualTo(Long value) {
            addCriterion("id <=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdIn(List<Long> values) {
            addCriterion("id in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotIn(List<Long> values) {
            addCriterion("id not in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdBetween(Long value1, Long value2) {
            addCriterion("id between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotBetween(Long value1, Long value2) {
            addCriterion("id not between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andOrderSnIsNull() {
            addCriterion("order_sn is null");
            return (Criteria) this;
        }

        public Criteria andOrderSnIsNotNull() {
            addCriterion("order_sn is not null");
            return (Criteria) this;
        }

        public Criteria andOrderSnEqualTo(String value) {
            addCriterion("order_sn =", value, "orderSn");
            return (Criteria) this;
        }

        public Criteria andOrderSnNotEqualTo(String value) {
            addCriterion("order_sn <>", value, "orderSn");
            return (Criteria) this;
        }

        public Criteria andOrderSnGreaterThan(String value) {
            addCriterion("order_sn >", value, "orderSn");
            return (Criteria) this;
        }

        public Criteria andOrderSnGreaterThanOrEqualTo(String value) {
            addCriterion("order_sn >=", value, "orderSn");
            return (Criteria) this;
        }

        public Criteria andOrderSnLessThan(String value) {
            addCriterion("order_sn <", value, "orderSn");
            return (Criteria) this;
        }

        public Criteria andOrderSnLessThanOrEqualTo(String value) {
            addCriterion("order_sn <=", value, "orderSn");
            return (Criteria) this;
        }

        public Criteria andOrderSnLike(String value) {
            addCriterion("order_sn like", value, "orderSn");
            return (Criteria) this;
        }

        public Criteria andOrderSnNotLike(String value) {
            addCriterion("order_sn not like", value, "orderSn");
            return (Criteria) this;
        }

        public Criteria andOrderSnIn(List<String> values) {
            addCriterion("order_sn in", values, "orderSn");
            return (Criteria) this;
        }

        public Criteria andOrderSnNotIn(List<String> values) {
            addCriterion("order_sn not in", values, "orderSn");
            return (Criteria) this;
        }

        public Criteria andOrderSnBetween(String value1, String value2) {
            addCriterion("order_sn between", value1, value2, "orderSn");
            return (Criteria) this;
        }

        public Criteria andOrderSnNotBetween(String value1, String value2) {
            addCriterion("order_sn not between", value1, value2, "orderSn");
            return (Criteria) this;
        }

        public Criteria andGroupStatusIsNull() {
            addCriterion("group_status is null");
            return (Criteria) this;
        }

        public Criteria andGroupStatusIsNotNull() {
            addCriterion("group_status is not null");
            return (Criteria) this;
        }

        public Criteria andGroupStatusEqualTo(Integer value) {
            addCriterion("group_status =", value, "groupStatus");
            return (Criteria) this;
        }

        public Criteria andGroupStatusNotEqualTo(Integer value) {
            addCriterion("group_status <>", value, "groupStatus");
            return (Criteria) this;
        }

        public Criteria andGroupStatusGreaterThan(Integer value) {
            addCriterion("group_status >", value, "groupStatus");
            return (Criteria) this;
        }

        public Criteria andGroupStatusGreaterThanOrEqualTo(Integer value) {
            addCriterion("group_status >=", value, "groupStatus");
            return (Criteria) this;
        }

        public Criteria andGroupStatusLessThan(Integer value) {
            addCriterion("group_status <", value, "groupStatus");
            return (Criteria) this;
        }

        public Criteria andGroupStatusLessThanOrEqualTo(Integer value) {
            addCriterion("group_status <=", value, "groupStatus");
            return (Criteria) this;
        }

        public Criteria andGroupStatusIn(List<Integer> values) {
            addCriterion("group_status in", values, "groupStatus");
            return (Criteria) this;
        }

        public Criteria andGroupStatusNotIn(List<Integer> values) {
            addCriterion("group_status not in", values, "groupStatus");
            return (Criteria) this;
        }

        public Criteria andGroupStatusBetween(Integer value1, Integer value2) {
            addCriterion("group_status between", value1, value2, "groupStatus");
            return (Criteria) this;
        }

        public Criteria andGroupStatusNotBetween(Integer value1, Integer value2) {
            addCriterion("group_status not between", value1, value2, "groupStatus");
            return (Criteria) this;
        }

        public Criteria andOrderStatusIsNull() {
            addCriterion("order_status is null");
            return (Criteria) this;
        }

        public Criteria andOrderStatusIsNotNull() {
            addCriterion("order_status is not null");
            return (Criteria) this;
        }

        public Criteria andOrderStatusEqualTo(Integer value) {
            addCriterion("order_status =", value, "orderStatus");
            return (Criteria) this;
        }

        public Criteria andOrderStatusNotEqualTo(Integer value) {
            addCriterion("order_status <>", value, "orderStatus");
            return (Criteria) this;
        }

        public Criteria andOrderStatusGreaterThan(Integer value) {
            addCriterion("order_status >", value, "orderStatus");
            return (Criteria) this;
        }

        public Criteria andOrderStatusGreaterThanOrEqualTo(Integer value) {
            addCriterion("order_status >=", value, "orderStatus");
            return (Criteria) this;
        }

        public Criteria andOrderStatusLessThan(Integer value) {
            addCriterion("order_status <", value, "orderStatus");
            return (Criteria) this;
        }

        public Criteria andOrderStatusLessThanOrEqualTo(Integer value) {
            addCriterion("order_status <=", value, "orderStatus");
            return (Criteria) this;
        }

        public Criteria andOrderStatusIn(List<Integer> values) {
            addCriterion("order_status in", values, "orderStatus");
            return (Criteria) this;
        }

        public Criteria andOrderStatusNotIn(List<Integer> values) {
            addCriterion("order_status not in", values, "orderStatus");
            return (Criteria) this;
        }

        public Criteria andOrderStatusBetween(Integer value1, Integer value2) {
            addCriterion("order_status between", value1, value2, "orderStatus");
            return (Criteria) this;
        }

        public Criteria andOrderStatusNotBetween(Integer value1, Integer value2) {
            addCriterion("order_status not between", value1, value2, "orderStatus");
            return (Criteria) this;
        }

        public Criteria andRefundStatusIsNull() {
            addCriterion("refund_status is null");
            return (Criteria) this;
        }

        public Criteria andRefundStatusIsNotNull() {
            addCriterion("refund_status is not null");
            return (Criteria) this;
        }

        public Criteria andRefundStatusEqualTo(Integer value) {
            addCriterion("refund_status =", value, "refundStatus");
            return (Criteria) this;
        }

        public Criteria andRefundStatusNotEqualTo(Integer value) {
            addCriterion("refund_status <>", value, "refundStatus");
            return (Criteria) this;
        }

        public Criteria andRefundStatusGreaterThan(Integer value) {
            addCriterion("refund_status >", value, "refundStatus");
            return (Criteria) this;
        }

        public Criteria andRefundStatusGreaterThanOrEqualTo(Integer value) {
            addCriterion("refund_status >=", value, "refundStatus");
            return (Criteria) this;
        }

        public Criteria andRefundStatusLessThan(Integer value) {
            addCriterion("refund_status <", value, "refundStatus");
            return (Criteria) this;
        }

        public Criteria andRefundStatusLessThanOrEqualTo(Integer value) {
            addCriterion("refund_status <=", value, "refundStatus");
            return (Criteria) this;
        }

        public Criteria andRefundStatusIn(List<Integer> values) {
            addCriterion("refund_status in", values, "refundStatus");
            return (Criteria) this;
        }

        public Criteria andRefundStatusNotIn(List<Integer> values) {
            addCriterion("refund_status not in", values, "refundStatus");
            return (Criteria) this;
        }

        public Criteria andRefundStatusBetween(Integer value1, Integer value2) {
            addCriterion("refund_status between", value1, value2, "refundStatus");
            return (Criteria) this;
        }

        public Criteria andRefundStatusNotBetween(Integer value1, Integer value2) {
            addCriterion("refund_status not between", value1, value2, "refundStatus");
            return (Criteria) this;
        }

        public Criteria andConfirmStatusIsNull() {
            addCriterion("confirm_status is null");
            return (Criteria) this;
        }

        public Criteria andConfirmStatusIsNotNull() {
            addCriterion("confirm_status is not null");
            return (Criteria) this;
        }

        public Criteria andConfirmStatusEqualTo(Integer value) {
            addCriterion("confirm_status =", value, "confirmStatus");
            return (Criteria) this;
        }

        public Criteria andConfirmStatusNotEqualTo(Integer value) {
            addCriterion("confirm_status <>", value, "confirmStatus");
            return (Criteria) this;
        }

        public Criteria andConfirmStatusGreaterThan(Integer value) {
            addCriterion("confirm_status >", value, "confirmStatus");
            return (Criteria) this;
        }

        public Criteria andConfirmStatusGreaterThanOrEqualTo(Integer value) {
            addCriterion("confirm_status >=", value, "confirmStatus");
            return (Criteria) this;
        }

        public Criteria andConfirmStatusLessThan(Integer value) {
            addCriterion("confirm_status <", value, "confirmStatus");
            return (Criteria) this;
        }

        public Criteria andConfirmStatusLessThanOrEqualTo(Integer value) {
            addCriterion("confirm_status <=", value, "confirmStatus");
            return (Criteria) this;
        }

        public Criteria andConfirmStatusIn(List<Integer> values) {
            addCriterion("confirm_status in", values, "confirmStatus");
            return (Criteria) this;
        }

        public Criteria andConfirmStatusNotIn(List<Integer> values) {
            addCriterion("confirm_status not in", values, "confirmStatus");
            return (Criteria) this;
        }

        public Criteria andConfirmStatusBetween(Integer value1, Integer value2) {
            addCriterion("confirm_status between", value1, value2, "confirmStatus");
            return (Criteria) this;
        }

        public Criteria andConfirmStatusNotBetween(Integer value1, Integer value2) {
            addCriterion("confirm_status not between", value1, value2, "confirmStatus");
            return (Criteria) this;
        }

        public Criteria andTradeTypeIsNull() {
            addCriterion("trade_type is null");
            return (Criteria) this;
        }

        public Criteria andTradeTypeIsNotNull() {
            addCriterion("trade_type is not null");
            return (Criteria) this;
        }

        public Criteria andTradeTypeEqualTo(Integer value) {
            addCriterion("trade_type =", value, "tradeType");
            return (Criteria) this;
        }

        public Criteria andTradeTypeNotEqualTo(Integer value) {
            addCriterion("trade_type <>", value, "tradeType");
            return (Criteria) this;
        }

        public Criteria andTradeTypeGreaterThan(Integer value) {
            addCriterion("trade_type >", value, "tradeType");
            return (Criteria) this;
        }

        public Criteria andTradeTypeGreaterThanOrEqualTo(Integer value) {
            addCriterion("trade_type >=", value, "tradeType");
            return (Criteria) this;
        }

        public Criteria andTradeTypeLessThan(Integer value) {
            addCriterion("trade_type <", value, "tradeType");
            return (Criteria) this;
        }

        public Criteria andTradeTypeLessThanOrEqualTo(Integer value) {
            addCriterion("trade_type <=", value, "tradeType");
            return (Criteria) this;
        }

        public Criteria andTradeTypeIn(List<Integer> values) {
            addCriterion("trade_type in", values, "tradeType");
            return (Criteria) this;
        }

        public Criteria andTradeTypeNotIn(List<Integer> values) {
            addCriterion("trade_type not in", values, "tradeType");
            return (Criteria) this;
        }

        public Criteria andTradeTypeBetween(Integer value1, Integer value2) {
            addCriterion("trade_type between", value1, value2, "tradeType");
            return (Criteria) this;
        }

        public Criteria andTradeTypeNotBetween(Integer value1, Integer value2) {
            addCriterion("trade_type not between", value1, value2, "tradeType");
            return (Criteria) this;
        }

        public Criteria andMallIdIsNull() {
            addCriterion("mall_id is null");
            return (Criteria) this;
        }

        public Criteria andMallIdIsNotNull() {
            addCriterion("mall_id is not null");
            return (Criteria) this;
        }

        public Criteria andMallIdEqualTo(Integer value) {
            addCriterion("mall_id =", value, "mallId");
            return (Criteria) this;
        }

        public Criteria andMallIdNotEqualTo(Integer value) {
            addCriterion("mall_id <>", value, "mallId");
            return (Criteria) this;
        }

        public Criteria andMallIdGreaterThan(Integer value) {
            addCriterion("mall_id >", value, "mallId");
            return (Criteria) this;
        }

        public Criteria andMallIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("mall_id >=", value, "mallId");
            return (Criteria) this;
        }

        public Criteria andMallIdLessThan(Integer value) {
            addCriterion("mall_id <", value, "mallId");
            return (Criteria) this;
        }

        public Criteria andMallIdLessThanOrEqualTo(Integer value) {
            addCriterion("mall_id <=", value, "mallId");
            return (Criteria) this;
        }

        public Criteria andMallIdIn(List<Integer> values) {
            addCriterion("mall_id in", values, "mallId");
            return (Criteria) this;
        }

        public Criteria andMallIdNotIn(List<Integer> values) {
            addCriterion("mall_id not in", values, "mallId");
            return (Criteria) this;
        }

        public Criteria andMallIdBetween(Integer value1, Integer value2) {
            addCriterion("mall_id between", value1, value2, "mallId");
            return (Criteria) this;
        }

        public Criteria andMallIdNotBetween(Integer value1, Integer value2) {
            addCriterion("mall_id not between", value1, value2, "mallId");
            return (Criteria) this;
        }

        public Criteria andConfirmTimeIsNull() {
            addCriterion("confirm_time is null");
            return (Criteria) this;
        }

        public Criteria andConfirmTimeIsNotNull() {
            addCriterion("confirm_time is not null");
            return (Criteria) this;
        }

        public Criteria andConfirmTimeEqualTo(String value) {
            addCriterion("confirm_time =", value, "confirmTime");
            return (Criteria) this;
        }

        public Criteria andConfirmTimeNotEqualTo(String value) {
            addCriterion("confirm_time <>", value, "confirmTime");
            return (Criteria) this;
        }

        public Criteria andConfirmTimeGreaterThan(String value) {
            addCriterion("confirm_time >", value, "confirmTime");
            return (Criteria) this;
        }

        public Criteria andConfirmTimeGreaterThanOrEqualTo(String value) {
            addCriterion("confirm_time >=", value, "confirmTime");
            return (Criteria) this;
        }

        public Criteria andConfirmTimeLessThan(String value) {
            addCriterion("confirm_time <", value, "confirmTime");
            return (Criteria) this;
        }

        public Criteria andConfirmTimeLessThanOrEqualTo(String value) {
            addCriterion("confirm_time <=", value, "confirmTime");
            return (Criteria) this;
        }

        public Criteria andConfirmTimeLike(String value) {
            addCriterion("confirm_time like", value, "confirmTime");
            return (Criteria) this;
        }

        public Criteria andConfirmTimeNotLike(String value) {
            addCriterion("confirm_time not like", value, "confirmTime");
            return (Criteria) this;
        }

        public Criteria andConfirmTimeIn(List<String> values) {
            addCriterion("confirm_time in", values, "confirmTime");
            return (Criteria) this;
        }

        public Criteria andConfirmTimeNotIn(List<String> values) {
            addCriterion("confirm_time not in", values, "confirmTime");
            return (Criteria) this;
        }

        public Criteria andConfirmTimeBetween(String value1, String value2) {
            addCriterion("confirm_time between", value1, value2, "confirmTime");
            return (Criteria) this;
        }

        public Criteria andConfirmTimeNotBetween(String value1, String value2) {
            addCriterion("confirm_time not between", value1, value2, "confirmTime");
            return (Criteria) this;
        }

        public Criteria andUpdatedAtIsNull() {
            addCriterion("updated_at is null");
            return (Criteria) this;
        }

        public Criteria andUpdatedAtIsNotNull() {
            addCriterion("updated_at is not null");
            return (Criteria) this;
        }

        public Criteria andUpdatedAtEqualTo(Date value) {
            addCriterion("updated_at =", value, "updatedAt");
            return (Criteria) this;
        }

        public Criteria andUpdatedAtNotEqualTo(Date value) {
            addCriterion("updated_at <>", value, "updatedAt");
            return (Criteria) this;
        }

        public Criteria andUpdatedAtGreaterThan(Date value) {
            addCriterion("updated_at >", value, "updatedAt");
            return (Criteria) this;
        }

        public Criteria andUpdatedAtGreaterThanOrEqualTo(Date value) {
            addCriterion("updated_at >=", value, "updatedAt");
            return (Criteria) this;
        }

        public Criteria andUpdatedAtLessThan(Date value) {
            addCriterion("updated_at <", value, "updatedAt");
            return (Criteria) this;
        }

        public Criteria andUpdatedAtLessThanOrEqualTo(Date value) {
            addCriterion("updated_at <=", value, "updatedAt");
            return (Criteria) this;
        }

        public Criteria andUpdatedAtIn(List<Date> values) {
            addCriterion("updated_at in", values, "updatedAt");
            return (Criteria) this;
        }

        public Criteria andUpdatedAtNotIn(List<Date> values) {
            addCriterion("updated_at not in", values, "updatedAt");
            return (Criteria) this;
        }

        public Criteria andUpdatedAtBetween(Date value1, Date value2) {
            addCriterion("updated_at between", value1, value2, "updatedAt");
            return (Criteria) this;
        }

        public Criteria andUpdatedAtNotBetween(Date value1, Date value2) {
            addCriterion("updated_at not between", value1, value2, "updatedAt");
            return (Criteria) this;
        }

        public Criteria andPdpVersionIsNull() {
            addCriterion("pdp_version is null");
            return (Criteria) this;
        }

        public Criteria andPdpVersionIsNotNull() {
            addCriterion("pdp_version is not null");
            return (Criteria) this;
        }

        public Criteria andPdpVersionEqualTo(Integer value) {
            addCriterion("pdp_version =", value, "pdpVersion");
            return (Criteria) this;
        }

        public Criteria andPdpVersionNotEqualTo(Integer value) {
            addCriterion("pdp_version <>", value, "pdpVersion");
            return (Criteria) this;
        }

        public Criteria andPdpVersionGreaterThan(Integer value) {
            addCriterion("pdp_version >", value, "pdpVersion");
            return (Criteria) this;
        }

        public Criteria andPdpVersionGreaterThanOrEqualTo(Integer value) {
            addCriterion("pdp_version >=", value, "pdpVersion");
            return (Criteria) this;
        }

        public Criteria andPdpVersionLessThan(Integer value) {
            addCriterion("pdp_version <", value, "pdpVersion");
            return (Criteria) this;
        }

        public Criteria andPdpVersionLessThanOrEqualTo(Integer value) {
            addCriterion("pdp_version <=", value, "pdpVersion");
            return (Criteria) this;
        }

        public Criteria andPdpVersionIn(List<Integer> values) {
            addCriterion("pdp_version in", values, "pdpVersion");
            return (Criteria) this;
        }

        public Criteria andPdpVersionNotIn(List<Integer> values) {
            addCriterion("pdp_version not in", values, "pdpVersion");
            return (Criteria) this;
        }

        public Criteria andPdpVersionBetween(Integer value1, Integer value2) {
            addCriterion("pdp_version between", value1, value2, "pdpVersion");
            return (Criteria) this;
        }

        public Criteria andPdpVersionNotBetween(Integer value1, Integer value2) {
            addCriterion("pdp_version not between", value1, value2, "pdpVersion");
            return (Criteria) this;
        }

        public Criteria andPdpCreatedIsNull() {
            addCriterion("pdp_created is null");
            return (Criteria) this;
        }

        public Criteria andPdpCreatedIsNotNull() {
            addCriterion("pdp_created is not null");
            return (Criteria) this;
        }

        public Criteria andPdpCreatedEqualTo(Date value) {
            addCriterion("pdp_created =", value, "pdpCreated");
            return (Criteria) this;
        }

        public Criteria andPdpCreatedNotEqualTo(Date value) {
            addCriterion("pdp_created <>", value, "pdpCreated");
            return (Criteria) this;
        }

        public Criteria andPdpCreatedGreaterThan(Date value) {
            addCriterion("pdp_created >", value, "pdpCreated");
            return (Criteria) this;
        }

        public Criteria andPdpCreatedGreaterThanOrEqualTo(Date value) {
            addCriterion("pdp_created >=", value, "pdpCreated");
            return (Criteria) this;
        }

        public Criteria andPdpCreatedLessThan(Date value) {
            addCriterion("pdp_created <", value, "pdpCreated");
            return (Criteria) this;
        }

        public Criteria andPdpCreatedLessThanOrEqualTo(Date value) {
            addCriterion("pdp_created <=", value, "pdpCreated");
            return (Criteria) this;
        }

        public Criteria andPdpCreatedIn(List<Date> values) {
            addCriterion("pdp_created in", values, "pdpCreated");
            return (Criteria) this;
        }

        public Criteria andPdpCreatedNotIn(List<Date> values) {
            addCriterion("pdp_created not in", values, "pdpCreated");
            return (Criteria) this;
        }

        public Criteria andPdpCreatedBetween(Date value1, Date value2) {
            addCriterion("pdp_created between", value1, value2, "pdpCreated");
            return (Criteria) this;
        }

        public Criteria andPdpCreatedNotBetween(Date value1, Date value2) {
            addCriterion("pdp_created not between", value1, value2, "pdpCreated");
            return (Criteria) this;
        }

        public Criteria andPdpModifiedIsNull() {
            addCriterion("pdp_modified is null");
            return (Criteria) this;
        }

        public Criteria andPdpModifiedIsNotNull() {
            addCriterion("pdp_modified is not null");
            return (Criteria) this;
        }

        public Criteria andPdpModifiedEqualTo(Date value) {
            addCriterion("pdp_modified =", value, "pdpModified");
            return (Criteria) this;
        }

        public Criteria andPdpModifiedNotEqualTo(Date value) {
            addCriterion("pdp_modified <>", value, "pdpModified");
            return (Criteria) this;
        }

        public Criteria andPdpModifiedGreaterThan(Date value) {
            addCriterion("pdp_modified >", value, "pdpModified");
            return (Criteria) this;
        }

        public Criteria andPdpModifiedGreaterThanOrEqualTo(Date value) {
            addCriterion("pdp_modified >=", value, "pdpModified");
            return (Criteria) this;
        }

        public Criteria andPdpModifiedLessThan(Date value) {
            addCriterion("pdp_modified <", value, "pdpModified");
            return (Criteria) this;
        }

        public Criteria andPdpModifiedLessThanOrEqualTo(Date value) {
            addCriterion("pdp_modified <=", value, "pdpModified");
            return (Criteria) this;
        }

        public Criteria andPdpModifiedIn(List<Date> values) {
            addCriterion("pdp_modified in", values, "pdpModified");
            return (Criteria) this;
        }

        public Criteria andPdpModifiedNotIn(List<Date> values) {
            addCriterion("pdp_modified not in", values, "pdpModified");
            return (Criteria) this;
        }

        public Criteria andPdpModifiedBetween(Date value1, Date value2) {
            addCriterion("pdp_modified between", value1, value2, "pdpModified");
            return (Criteria) this;
        }

        public Criteria andPdpModifiedNotBetween(Date value1, Date value2) {
            addCriterion("pdp_modified not between", value1, value2, "pdpModified");
            return (Criteria) this;
        }

        public Criteria andIdEqualToWhenPresent(Long value) {
            if(value != null) {
                addCriterion("id =", value, "id");
            }
            return (Criteria) this;
        }

        public Criteria andIdNotEqualToWhenPresent(Long value) {
            if(value != null) {
                addCriterion("id <>", value, "id");
            }
            return (Criteria) this;
        }

        public Criteria andIdGreaterThanWhenPresent(Long value) {
            if(value != null) {
                addCriterion("id >", value, "id");
            }
            return (Criteria) this;
        }

        public Criteria andIdGreaterThanOrEqualToWhenPresent(Long value) {
            if(value != null) {
                addCriterion("id >=", value, "id");
            }
            return (Criteria) this;
        }

        public Criteria andIdLessThanWhenPresent(Long value) {
            if(value != null) {
                addCriterion("id <", value, "id");
            }
            return (Criteria) this;
        }

        public Criteria andIdLessThanOrEqualToWhenPresent(Long value) {
            if(value != null) {
                addCriterion("id <=", value, "id");
            }
            return (Criteria) this;
        }

        public Criteria andIdInWhenPresent(List<Long> values) {
            if(values != null && !values.isEmpty()){
                addCriterion("id in", values, "id");
            }
            return (Criteria) this;
        }

        public Criteria andIdNotInWhenPresent(List<Long> values) {
            if(values != null && !values.isEmpty()){
                addCriterion("id not in", values, "id");
            }
            return (Criteria) this;
        }

        public Criteria andIdBetweenWhenPresent(Long value1, Long value2) {
            if(value1 != null && value2 != null){
                addCriterion("id between", value1, value2, "id");
            }
            return (Criteria) this;
        }

        public Criteria andIdNotBetweenWhenPresent(Long value1, Long value2) {
            if(value1 != null && value2 != null){
                addCriterion("id not between", value1, value2, "id");
            }
            return (Criteria) this;
        }

        public Criteria andOrderSnEqualToWhenPresent(String value) {
            if(value != null) {
                addCriterion("order_sn =", value, "orderSn");
            }
            return (Criteria) this;
        }

        public Criteria andOrderSnNotEqualToWhenPresent(String value) {
            if(value != null) {
                addCriterion("order_sn <>", value, "orderSn");
            }
            return (Criteria) this;
        }

        public Criteria andOrderSnGreaterThanWhenPresent(String value) {
            if(value != null) {
                addCriterion("order_sn >", value, "orderSn");
            }
            return (Criteria) this;
        }

        public Criteria andOrderSnGreaterThanOrEqualToWhenPresent(String value) {
            if(value != null) {
                addCriterion("order_sn >=", value, "orderSn");
            }
            return (Criteria) this;
        }

        public Criteria andOrderSnLessThanWhenPresent(String value) {
            if(value != null) {
                addCriterion("order_sn <", value, "orderSn");
            }
            return (Criteria) this;
        }

        public Criteria andOrderSnLessThanOrEqualToWhenPresent(String value) {
            if(value != null) {
                addCriterion("order_sn <=", value, "orderSn");
            }
            return (Criteria) this;
        }

        public Criteria andOrderSnLikeWhenPresent(String value) {
            if(value != null) {
                addCriterion("order_sn like", value, "orderSn");
            }
            return (Criteria) this;
        }

        public Criteria andOrderSnNotLikeWhenPresent(String value) {
            if(value != null) {
                addCriterion("order_sn not like", value, "orderSn");
            }
            return (Criteria) this;
        }

        public Criteria andOrderSnInWhenPresent(List<String> values) {
            if(values != null && !values.isEmpty()){
                addCriterion("order_sn in", values, "orderSn");
            }
            return (Criteria) this;
        }

        public Criteria andOrderSnNotInWhenPresent(List<String> values) {
            if(values != null && !values.isEmpty()){
                addCriterion("order_sn not in", values, "orderSn");
            }
            return (Criteria) this;
        }

        public Criteria andOrderSnBetweenWhenPresent(String value1, String value2) {
            if(value1 != null && value2 != null){
                addCriterion("order_sn between", value1, value2, "orderSn");
            }
            return (Criteria) this;
        }

        public Criteria andOrderSnNotBetweenWhenPresent(String value1, String value2) {
            if(value1 != null && value2 != null){
                addCriterion("order_sn not between", value1, value2, "orderSn");
            }
            return (Criteria) this;
        }

        public Criteria andGroupStatusEqualToWhenPresent(Integer value) {
            if(value != null) {
                addCriterion("group_status =", value, "groupStatus");
            }
            return (Criteria) this;
        }

        public Criteria andGroupStatusNotEqualToWhenPresent(Integer value) {
            if(value != null) {
                addCriterion("group_status <>", value, "groupStatus");
            }
            return (Criteria) this;
        }

        public Criteria andGroupStatusGreaterThanWhenPresent(Integer value) {
            if(value != null) {
                addCriterion("group_status >", value, "groupStatus");
            }
            return (Criteria) this;
        }

        public Criteria andGroupStatusGreaterThanOrEqualToWhenPresent(Integer value) {
            if(value != null) {
                addCriterion("group_status >=", value, "groupStatus");
            }
            return (Criteria) this;
        }

        public Criteria andGroupStatusLessThanWhenPresent(Integer value) {
            if(value != null) {
                addCriterion("group_status <", value, "groupStatus");
            }
            return (Criteria) this;
        }

        public Criteria andGroupStatusLessThanOrEqualToWhenPresent(Integer value) {
            if(value != null) {
                addCriterion("group_status <=", value, "groupStatus");
            }
            return (Criteria) this;
        }

        public Criteria andGroupStatusInWhenPresent(List<Integer> values) {
            if(values != null && !values.isEmpty()){
                addCriterion("group_status in", values, "groupStatus");
            }
            return (Criteria) this;
        }

        public Criteria andGroupStatusNotInWhenPresent(List<Integer> values) {
            if(values != null && !values.isEmpty()){
                addCriterion("group_status not in", values, "groupStatus");
            }
            return (Criteria) this;
        }

        public Criteria andGroupStatusBetweenWhenPresent(Integer value1, Integer value2) {
            if(value1 != null && value2 != null){
                addCriterion("group_status between", value1, value2, "groupStatus");
            }
            return (Criteria) this;
        }

        public Criteria andGroupStatusNotBetweenWhenPresent(Integer value1, Integer value2) {
            if(value1 != null && value2 != null){
                addCriterion("group_status not between", value1, value2, "groupStatus");
            }
            return (Criteria) this;
        }

        public Criteria andOrderStatusEqualToWhenPresent(Integer value) {
            if(value != null) {
                addCriterion("order_status =", value, "orderStatus");
            }
            return (Criteria) this;
        }

        public Criteria andOrderStatusNotEqualToWhenPresent(Integer value) {
            if(value != null) {
                addCriterion("order_status <>", value, "orderStatus");
            }
            return (Criteria) this;
        }

        public Criteria andOrderStatusGreaterThanWhenPresent(Integer value) {
            if(value != null) {
                addCriterion("order_status >", value, "orderStatus");
            }
            return (Criteria) this;
        }

        public Criteria andOrderStatusGreaterThanOrEqualToWhenPresent(Integer value) {
            if(value != null) {
                addCriterion("order_status >=", value, "orderStatus");
            }
            return (Criteria) this;
        }

        public Criteria andOrderStatusLessThanWhenPresent(Integer value) {
            if(value != null) {
                addCriterion("order_status <", value, "orderStatus");
            }
            return (Criteria) this;
        }

        public Criteria andOrderStatusLessThanOrEqualToWhenPresent(Integer value) {
            if(value != null) {
                addCriterion("order_status <=", value, "orderStatus");
            }
            return (Criteria) this;
        }

        public Criteria andOrderStatusInWhenPresent(List<Integer> values) {
            if(values != null && !values.isEmpty()){
                addCriterion("order_status in", values, "orderStatus");
            }
            return (Criteria) this;
        }

        public Criteria andOrderStatusNotInWhenPresent(List<Integer> values) {
            if(values != null && !values.isEmpty()){
                addCriterion("order_status not in", values, "orderStatus");
            }
            return (Criteria) this;
        }

        public Criteria andOrderStatusBetweenWhenPresent(Integer value1, Integer value2) {
            if(value1 != null && value2 != null){
                addCriterion("order_status between", value1, value2, "orderStatus");
            }
            return (Criteria) this;
        }

        public Criteria andOrderStatusNotBetweenWhenPresent(Integer value1, Integer value2) {
            if(value1 != null && value2 != null){
                addCriterion("order_status not between", value1, value2, "orderStatus");
            }
            return (Criteria) this;
        }

        public Criteria andRefundStatusEqualToWhenPresent(Integer value) {
            if(value != null) {
                addCriterion("refund_status =", value, "refundStatus");
            }
            return (Criteria) this;
        }

        public Criteria andRefundStatusNotEqualToWhenPresent(Integer value) {
            if(value != null) {
                addCriterion("refund_status <>", value, "refundStatus");
            }
            return (Criteria) this;
        }

        public Criteria andRefundStatusGreaterThanWhenPresent(Integer value) {
            if(value != null) {
                addCriterion("refund_status >", value, "refundStatus");
            }
            return (Criteria) this;
        }

        public Criteria andRefundStatusGreaterThanOrEqualToWhenPresent(Integer value) {
            if(value != null) {
                addCriterion("refund_status >=", value, "refundStatus");
            }
            return (Criteria) this;
        }

        public Criteria andRefundStatusLessThanWhenPresent(Integer value) {
            if(value != null) {
                addCriterion("refund_status <", value, "refundStatus");
            }
            return (Criteria) this;
        }

        public Criteria andRefundStatusLessThanOrEqualToWhenPresent(Integer value) {
            if(value != null) {
                addCriterion("refund_status <=", value, "refundStatus");
            }
            return (Criteria) this;
        }

        public Criteria andRefundStatusInWhenPresent(List<Integer> values) {
            if(values != null && !values.isEmpty()){
                addCriterion("refund_status in", values, "refundStatus");
            }
            return (Criteria) this;
        }

        public Criteria andRefundStatusNotInWhenPresent(List<Integer> values) {
            if(values != null && !values.isEmpty()){
                addCriterion("refund_status not in", values, "refundStatus");
            }
            return (Criteria) this;
        }

        public Criteria andRefundStatusBetweenWhenPresent(Integer value1, Integer value2) {
            if(value1 != null && value2 != null){
                addCriterion("refund_status between", value1, value2, "refundStatus");
            }
            return (Criteria) this;
        }

        public Criteria andRefundStatusNotBetweenWhenPresent(Integer value1, Integer value2) {
            if(value1 != null && value2 != null){
                addCriterion("refund_status not between", value1, value2, "refundStatus");
            }
            return (Criteria) this;
        }

        public Criteria andConfirmStatusEqualToWhenPresent(Integer value) {
            if(value != null) {
                addCriterion("confirm_status =", value, "confirmStatus");
            }
            return (Criteria) this;
        }

        public Criteria andConfirmStatusNotEqualToWhenPresent(Integer value) {
            if(value != null) {
                addCriterion("confirm_status <>", value, "confirmStatus");
            }
            return (Criteria) this;
        }

        public Criteria andConfirmStatusGreaterThanWhenPresent(Integer value) {
            if(value != null) {
                addCriterion("confirm_status >", value, "confirmStatus");
            }
            return (Criteria) this;
        }

        public Criteria andConfirmStatusGreaterThanOrEqualToWhenPresent(Integer value) {
            if(value != null) {
                addCriterion("confirm_status >=", value, "confirmStatus");
            }
            return (Criteria) this;
        }

        public Criteria andConfirmStatusLessThanWhenPresent(Integer value) {
            if(value != null) {
                addCriterion("confirm_status <", value, "confirmStatus");
            }
            return (Criteria) this;
        }

        public Criteria andConfirmStatusLessThanOrEqualToWhenPresent(Integer value) {
            if(value != null) {
                addCriterion("confirm_status <=", value, "confirmStatus");
            }
            return (Criteria) this;
        }

        public Criteria andConfirmStatusInWhenPresent(List<Integer> values) {
            if(values != null && !values.isEmpty()){
                addCriterion("confirm_status in", values, "confirmStatus");
            }
            return (Criteria) this;
        }

        public Criteria andConfirmStatusNotInWhenPresent(List<Integer> values) {
            if(values != null && !values.isEmpty()){
                addCriterion("confirm_status not in", values, "confirmStatus");
            }
            return (Criteria) this;
        }

        public Criteria andConfirmStatusBetweenWhenPresent(Integer value1, Integer value2) {
            if(value1 != null && value2 != null){
                addCriterion("confirm_status between", value1, value2, "confirmStatus");
            }
            return (Criteria) this;
        }

        public Criteria andConfirmStatusNotBetweenWhenPresent(Integer value1, Integer value2) {
            if(value1 != null && value2 != null){
                addCriterion("confirm_status not between", value1, value2, "confirmStatus");
            }
            return (Criteria) this;
        }

        public Criteria andTradeTypeEqualToWhenPresent(Integer value) {
            if(value != null) {
                addCriterion("trade_type =", value, "tradeType");
            }
            return (Criteria) this;
        }

        public Criteria andTradeTypeNotEqualToWhenPresent(Integer value) {
            if(value != null) {
                addCriterion("trade_type <>", value, "tradeType");
            }
            return (Criteria) this;
        }

        public Criteria andTradeTypeGreaterThanWhenPresent(Integer value) {
            if(value != null) {
                addCriterion("trade_type >", value, "tradeType");
            }
            return (Criteria) this;
        }

        public Criteria andTradeTypeGreaterThanOrEqualToWhenPresent(Integer value) {
            if(value != null) {
                addCriterion("trade_type >=", value, "tradeType");
            }
            return (Criteria) this;
        }

        public Criteria andTradeTypeLessThanWhenPresent(Integer value) {
            if(value != null) {
                addCriterion("trade_type <", value, "tradeType");
            }
            return (Criteria) this;
        }

        public Criteria andTradeTypeLessThanOrEqualToWhenPresent(Integer value) {
            if(value != null) {
                addCriterion("trade_type <=", value, "tradeType");
            }
            return (Criteria) this;
        }

        public Criteria andTradeTypeInWhenPresent(List<Integer> values) {
            if(values != null && !values.isEmpty()){
                addCriterion("trade_type in", values, "tradeType");
            }
            return (Criteria) this;
        }

        public Criteria andTradeTypeNotInWhenPresent(List<Integer> values) {
            if(values != null && !values.isEmpty()){
                addCriterion("trade_type not in", values, "tradeType");
            }
            return (Criteria) this;
        }

        public Criteria andTradeTypeBetweenWhenPresent(Integer value1, Integer value2) {
            if(value1 != null && value2 != null){
                addCriterion("trade_type between", value1, value2, "tradeType");
            }
            return (Criteria) this;
        }

        public Criteria andTradeTypeNotBetweenWhenPresent(Integer value1, Integer value2) {
            if(value1 != null && value2 != null){
                addCriterion("trade_type not between", value1, value2, "tradeType");
            }
            return (Criteria) this;
        }

        public Criteria andMallIdEqualToWhenPresent(Integer value) {
            if(value != null) {
                addCriterion("mall_id =", value, "mallId");
            }
            return (Criteria) this;
        }

        public Criteria andMallIdNotEqualToWhenPresent(Integer value) {
            if(value != null) {
                addCriterion("mall_id <>", value, "mallId");
            }
            return (Criteria) this;
        }

        public Criteria andMallIdGreaterThanWhenPresent(Integer value) {
            if(value != null) {
                addCriterion("mall_id >", value, "mallId");
            }
            return (Criteria) this;
        }

        public Criteria andMallIdGreaterThanOrEqualToWhenPresent(Integer value) {
            if(value != null) {
                addCriterion("mall_id >=", value, "mallId");
            }
            return (Criteria) this;
        }

        public Criteria andMallIdLessThanWhenPresent(Integer value) {
            if(value != null) {
                addCriterion("mall_id <", value, "mallId");
            }
            return (Criteria) this;
        }

        public Criteria andMallIdLessThanOrEqualToWhenPresent(Integer value) {
            if(value != null) {
                addCriterion("mall_id <=", value, "mallId");
            }
            return (Criteria) this;
        }

        public Criteria andMallIdInWhenPresent(List<Integer> values) {
            if(values != null && !values.isEmpty()){
                addCriterion("mall_id in", values, "mallId");
            }
            return (Criteria) this;
        }

        public Criteria andMallIdNotInWhenPresent(List<Integer> values) {
            if(values != null && !values.isEmpty()){
                addCriterion("mall_id not in", values, "mallId");
            }
            return (Criteria) this;
        }

        public Criteria andMallIdBetweenWhenPresent(Integer value1, Integer value2) {
            if(value1 != null && value2 != null){
                addCriterion("mall_id between", value1, value2, "mallId");
            }
            return (Criteria) this;
        }

        public Criteria andMallIdNotBetweenWhenPresent(Integer value1, Integer value2) {
            if(value1 != null && value2 != null){
                addCriterion("mall_id not between", value1, value2, "mallId");
            }
            return (Criteria) this;
        }

        public Criteria andConfirmTimeEqualToWhenPresent(String value) {
            if(value != null) {
                addCriterion("confirm_time =", value, "confirmTime");
            }
            return (Criteria) this;
        }

        public Criteria andConfirmTimeNotEqualToWhenPresent(String value) {
            if(value != null) {
                addCriterion("confirm_time <>", value, "confirmTime");
            }
            return (Criteria) this;
        }

        public Criteria andConfirmTimeGreaterThanWhenPresent(String value) {
            if(value != null) {
                addCriterion("confirm_time >", value, "confirmTime");
            }
            return (Criteria) this;
        }

        public Criteria andConfirmTimeGreaterThanOrEqualToWhenPresent(String value) {
            if(value != null) {
                addCriterion("confirm_time >=", value, "confirmTime");
            }
            return (Criteria) this;
        }

        public Criteria andConfirmTimeLessThanWhenPresent(String value) {
            if(value != null) {
                addCriterion("confirm_time <", value, "confirmTime");
            }
            return (Criteria) this;
        }

        public Criteria andConfirmTimeLessThanOrEqualToWhenPresent(String value) {
            if(value != null) {
                addCriterion("confirm_time <=", value, "confirmTime");
            }
            return (Criteria) this;
        }

        public Criteria andConfirmTimeLikeWhenPresent(String value) {
            if(value != null) {
                addCriterion("confirm_time like", value, "confirmTime");
            }
            return (Criteria) this;
        }

        public Criteria andConfirmTimeNotLikeWhenPresent(String value) {
            if(value != null) {
                addCriterion("confirm_time not like", value, "confirmTime");
            }
            return (Criteria) this;
        }

        public Criteria andConfirmTimeInWhenPresent(List<String> values) {
            if(values != null && !values.isEmpty()){
                addCriterion("confirm_time in", values, "confirmTime");
            }
            return (Criteria) this;
        }

        public Criteria andConfirmTimeNotInWhenPresent(List<String> values) {
            if(values != null && !values.isEmpty()){
                addCriterion("confirm_time not in", values, "confirmTime");
            }
            return (Criteria) this;
        }

        public Criteria andConfirmTimeBetweenWhenPresent(String value1, String value2) {
            if(value1 != null && value2 != null){
                addCriterion("confirm_time between", value1, value2, "confirmTime");
            }
            return (Criteria) this;
        }

        public Criteria andConfirmTimeNotBetweenWhenPresent(String value1, String value2) {
            if(value1 != null && value2 != null){
                addCriterion("confirm_time not between", value1, value2, "confirmTime");
            }
            return (Criteria) this;
        }

        public Criteria andUpdatedAtEqualToWhenPresent(Date value) {
            if(value != null) {
                addCriterion("updated_at =", value, "updatedAt");
            }
            return (Criteria) this;
        }

        public Criteria andUpdatedAtNotEqualToWhenPresent(Date value) {
            if(value != null) {
                addCriterion("updated_at <>", value, "updatedAt");
            }
            return (Criteria) this;
        }

        public Criteria andUpdatedAtGreaterThanWhenPresent(Date value) {
            if(value != null) {
                addCriterion("updated_at >", value, "updatedAt");
            }
            return (Criteria) this;
        }

        public Criteria andUpdatedAtGreaterThanOrEqualToWhenPresent(Date value) {
            if(value != null) {
                addCriterion("updated_at >=", value, "updatedAt");
            }
            return (Criteria) this;
        }

        public Criteria andUpdatedAtLessThanWhenPresent(Date value) {
            if(value != null) {
                addCriterion("updated_at <", value, "updatedAt");
            }
            return (Criteria) this;
        }

        public Criteria andUpdatedAtLessThanOrEqualToWhenPresent(Date value) {
            if(value != null) {
                addCriterion("updated_at <=", value, "updatedAt");
            }
            return (Criteria) this;
        }

        public Criteria andUpdatedAtInWhenPresent(List<Date> values) {
            if(values != null && !values.isEmpty()){
                addCriterion("updated_at in", values, "updatedAt");
            }
            return (Criteria) this;
        }

        public Criteria andUpdatedAtNotInWhenPresent(List<Date> values) {
            if(values != null && !values.isEmpty()){
                addCriterion("updated_at not in", values, "updatedAt");
            }
            return (Criteria) this;
        }

        public Criteria andUpdatedAtBetweenWhenPresent(Date value1, Date value2) {
            if(value1 != null && value2 != null){
                addCriterion("updated_at between", value1, value2, "updatedAt");
            }
            return (Criteria) this;
        }

        public Criteria andUpdatedAtNotBetweenWhenPresent(Date value1, Date value2) {
            if(value1 != null && value2 != null){
                addCriterion("updated_at not between", value1, value2, "updatedAt");
            }
            return (Criteria) this;
        }

        public Criteria andPdpVersionEqualToWhenPresent(Integer value) {
            if(value != null) {
                addCriterion("pdp_version =", value, "pdpVersion");
            }
            return (Criteria) this;
        }

        public Criteria andPdpVersionNotEqualToWhenPresent(Integer value) {
            if(value != null) {
                addCriterion("pdp_version <>", value, "pdpVersion");
            }
            return (Criteria) this;
        }

        public Criteria andPdpVersionGreaterThanWhenPresent(Integer value) {
            if(value != null) {
                addCriterion("pdp_version >", value, "pdpVersion");
            }
            return (Criteria) this;
        }

        public Criteria andPdpVersionGreaterThanOrEqualToWhenPresent(Integer value) {
            if(value != null) {
                addCriterion("pdp_version >=", value, "pdpVersion");
            }
            return (Criteria) this;
        }

        public Criteria andPdpVersionLessThanWhenPresent(Integer value) {
            if(value != null) {
                addCriterion("pdp_version <", value, "pdpVersion");
            }
            return (Criteria) this;
        }

        public Criteria andPdpVersionLessThanOrEqualToWhenPresent(Integer value) {
            if(value != null) {
                addCriterion("pdp_version <=", value, "pdpVersion");
            }
            return (Criteria) this;
        }

        public Criteria andPdpVersionInWhenPresent(List<Integer> values) {
            if(values != null && !values.isEmpty()){
                addCriterion("pdp_version in", values, "pdpVersion");
            }
            return (Criteria) this;
        }

        public Criteria andPdpVersionNotInWhenPresent(List<Integer> values) {
            if(values != null && !values.isEmpty()){
                addCriterion("pdp_version not in", values, "pdpVersion");
            }
            return (Criteria) this;
        }

        public Criteria andPdpVersionBetweenWhenPresent(Integer value1, Integer value2) {
            if(value1 != null && value2 != null){
                addCriterion("pdp_version between", value1, value2, "pdpVersion");
            }
            return (Criteria) this;
        }

        public Criteria andPdpVersionNotBetweenWhenPresent(Integer value1, Integer value2) {
            if(value1 != null && value2 != null){
                addCriterion("pdp_version not between", value1, value2, "pdpVersion");
            }
            return (Criteria) this;
        }

        public Criteria andPdpCreatedEqualToWhenPresent(Date value) {
            if(value != null) {
                addCriterion("pdp_created =", value, "pdpCreated");
            }
            return (Criteria) this;
        }

        public Criteria andPdpCreatedNotEqualToWhenPresent(Date value) {
            if(value != null) {
                addCriterion("pdp_created <>", value, "pdpCreated");
            }
            return (Criteria) this;
        }

        public Criteria andPdpCreatedGreaterThanWhenPresent(Date value) {
            if(value != null) {
                addCriterion("pdp_created >", value, "pdpCreated");
            }
            return (Criteria) this;
        }

        public Criteria andPdpCreatedGreaterThanOrEqualToWhenPresent(Date value) {
            if(value != null) {
                addCriterion("pdp_created >=", value, "pdpCreated");
            }
            return (Criteria) this;
        }

        public Criteria andPdpCreatedLessThanWhenPresent(Date value) {
            if(value != null) {
                addCriterion("pdp_created <", value, "pdpCreated");
            }
            return (Criteria) this;
        }

        public Criteria andPdpCreatedLessThanOrEqualToWhenPresent(Date value) {
            if(value != null) {
                addCriterion("pdp_created <=", value, "pdpCreated");
            }
            return (Criteria) this;
        }

        public Criteria andPdpCreatedInWhenPresent(List<Date> values) {
            if(values != null && !values.isEmpty()){
                addCriterion("pdp_created in", values, "pdpCreated");
            }
            return (Criteria) this;
        }

        public Criteria andPdpCreatedNotInWhenPresent(List<Date> values) {
            if(values != null && !values.isEmpty()){
                addCriterion("pdp_created not in", values, "pdpCreated");
            }
            return (Criteria) this;
        }

        public Criteria andPdpCreatedBetweenWhenPresent(Date value1, Date value2) {
            if(value1 != null && value2 != null){
                addCriterion("pdp_created between", value1, value2, "pdpCreated");
            }
            return (Criteria) this;
        }

        public Criteria andPdpCreatedNotBetweenWhenPresent(Date value1, Date value2) {
            if(value1 != null && value2 != null){
                addCriterion("pdp_created not between", value1, value2, "pdpCreated");
            }
            return (Criteria) this;
        }

        public Criteria andPdpModifiedEqualToWhenPresent(Date value) {
            if(value != null) {
                addCriterion("pdp_modified =", value, "pdpModified");
            }
            return (Criteria) this;
        }

        public Criteria andPdpModifiedNotEqualToWhenPresent(Date value) {
            if(value != null) {
                addCriterion("pdp_modified <>", value, "pdpModified");
            }
            return (Criteria) this;
        }

        public Criteria andPdpModifiedGreaterThanWhenPresent(Date value) {
            if(value != null) {
                addCriterion("pdp_modified >", value, "pdpModified");
            }
            return (Criteria) this;
        }

        public Criteria andPdpModifiedGreaterThanOrEqualToWhenPresent(Date value) {
            if(value != null) {
                addCriterion("pdp_modified >=", value, "pdpModified");
            }
            return (Criteria) this;
        }

        public Criteria andPdpModifiedLessThanWhenPresent(Date value) {
            if(value != null) {
                addCriterion("pdp_modified <", value, "pdpModified");
            }
            return (Criteria) this;
        }

        public Criteria andPdpModifiedLessThanOrEqualToWhenPresent(Date value) {
            if(value != null) {
                addCriterion("pdp_modified <=", value, "pdpModified");
            }
            return (Criteria) this;
        }

        public Criteria andPdpModifiedInWhenPresent(List<Date> values) {
            if(values != null && !values.isEmpty()){
                addCriterion("pdp_modified in", values, "pdpModified");
            }
            return (Criteria) this;
        }

        public Criteria andPdpModifiedNotInWhenPresent(List<Date> values) {
            if(values != null && !values.isEmpty()){
                addCriterion("pdp_modified not in", values, "pdpModified");
            }
            return (Criteria) this;
        }

        public Criteria andPdpModifiedBetweenWhenPresent(Date value1, Date value2) {
            if(value1 != null && value2 != null){
                addCriterion("pdp_modified between", value1, value2, "pdpModified");
            }
            return (Criteria) this;
        }

        public Criteria andPdpModifiedNotBetweenWhenPresent(Date value1, Date value2) {
            if(value1 != null && value2 != null){
                addCriterion("pdp_modified not between", value1, value2, "pdpModified");
            }
            return (Criteria) this;
        }
    }

    /**
     *
     * @mbg.generated do_not_delete_during_merge
     */
    public static class Criteria extends AbstractGeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     *
     * @mbg.generated
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }

    /**
     *
     * @mbg.generated
     */
    public enum OrderCondition {
        /**
         *自增主键
         */
        ID("id"),
        /**
         *订单号
         */
        ORDERSN("order_sn"),
        /**
         *成团状态
         */
        GROUPSTATUS("group_status"),
        /**
         *订单状态
         */
        ORDERSTATUS("order_status"),
        /**
         *退款状态
         */
        REFUNDSTATUS("refund_status"),
        /**
         *成交状态
         */
        CONFIRMSTATUS("confirm_status"),
        /**
         *交易类型
         */
        TRADETYPE("trade_type"),
        /**
         *商家编号
         */
        MALLID("mall_id"),
        /**
         *订单确认时间
         */
        CONFIRMTIME("confirm_time"),
        /**
         *订单更新时间
         */
        UPDATEDAT("updated_at"),
        /**
         *内容版本号
         */
        PDPVERSION("pdp_version"),
        /**
         *记录创建时间
         */
        PDPCREATED("pdp_created"),
        /**
         *记录更新时间
         */
        PDPMODIFIED("pdp_modified");

        private String columnName;

        OrderCondition(String columnName) {
            this.columnName = columnName;
        }

        public String getColumnName() {
            return columnName;
        }

        public static OrderCondition getEnumByName(String name) {
            OrderCondition[] orderConditions = OrderCondition.values();
            for (OrderCondition orderCondition : orderConditions) {
                if (orderCondition.name().equalsIgnoreCase(name)) {
                    return orderCondition;
                }
            }
            throw new RuntimeException("OrderCondition of " + name + " enum not exist");
        }

        @Override
        public String toString() {
            return columnName;
        }
    }

    /**
     *
     * @mbg.generated
     */
    public enum SortType {
        /**
         * 升序
         */
        ASC("asc"),
        /**
         * 降序
         */
        DESC("desc");

        private String value;

        SortType(String value) {
            this.value = value;
        }

        public String getValue() {
            return value;
        }

        public static SortType getEnumByName(String name) {
            SortType[] sortTypes = SortType.values();
            for (SortType sortType : sortTypes) {
                if (sortType.name().equalsIgnoreCase(name)) {
                    return sortType;
                }
            }
            throw new RuntimeException("SortType of " + name + " enum not exist");
        }

        @Override
        public String toString() {
            return value;
        }
    }
}